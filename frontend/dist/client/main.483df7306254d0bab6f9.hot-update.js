webpackHotUpdate("main",{

/***/ "./src/shared/Content/rightSide/timerLogic.js":
/*!****************************************************!*\
  !*** ./src/shared/Content/rightSide/timerLogic.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useTimerLogic = void 0;\nvar react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar useNow_1 = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module './useNow'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())); // Не забудьте импортировать useNow\nfunction useTimerLogic(initialTime, buttonData) {\n    var _a = (0, react_1.useState)(), startAt = _a[0], setStartAt = _a[1];\n    var _b = (0, react_1.useState)(false), isActive = _b[0], setIsActive = _b[1];\n    var _c = (0, react_1.useState)(false), isCompleted = _c[0], setIsCompleted = _c[1];\n    var _d = (0, react_1.useState)('work'), timerToggleValue = _d[0], setTimerToggleValue = _d[1];\n    var _e = (0, react_1.useState)(''), id = _e[0], setId = _e[1];\n    (0, react_1.useEffect)(function () {\n        setId(buttonData.id);\n    }, [buttonData]);\n    var now = (0, useNow_1.useNow)(1000, startAt);\n    var fromStart = now - (startAt !== null && startAt !== void 0 ? startAt : now);\n    var countDoun = Math.max(0, initialTime - fromStart);\n    var toggleTimer = function () {\n        if (startAt) {\n            setStartAt();\n        }\n        else {\n            setStartAt(Date.now());\n        }\n    };\n    var isCountEnd = countDoun === 0;\n    var toggleWork = function (value) {\n        setIsActive(false);\n        setIsCompleted(true);\n        setTimerToggleValue(value);\n    };\n    function plusMinutes() {\n        setStartAt(now); // Обновляем startAt, чтобы обновить countDoun\n    }\n    var handlePlusMinutesClick = function () {\n        plusMinutes();\n    };\n    var formatTime = function (time) {\n        if (time < 0) {\n            return \"00:00\";\n        }\n        var minutes = Math.floor(time / 60000);\n        var remainingMilliseconds = time % 60000;\n        return \"\".concat(minutes, \":\").concat(remainingMilliseconds < 10000 ? '0' : '').concat(remainingMilliseconds);\n    };\n    var resetTimer = function () {\n        setIsActive(false);\n        setIsCompleted(false);\n        setStartAt(); // Сбрасываем startAt\n    };\n    (0, react_1.useEffect)(function () {\n        if (isCountEnd && timerToggleValue === 'work') {\n            console.log(\"let's get some rest\");\n            toggleWork('pause');\n        }\n        else if (countDoun === 0 && timerToggleValue === 'pause') {\n            console.log(\"let's work\");\n            toggleWork('work');\n        }\n    }, [isCountEnd, timerToggleValue, countDoun]);\n    var timer = Math.ceil(countDoun / 1000);\n    return {\n        id: id,\n        toggleTimer: toggleTimer,\n        formatTime: formatTime,\n        startAt: startAt,\n        handlePlusMinutesClick: handlePlusMinutesClick,\n        timer: timer,\n        isActive: isActive,\n        isCompleted: isCompleted,\n        resetTimer: resetTimer\n    };\n}\nexports.useTimerLogic = useTimerLogic;\n\n\n//# sourceURL=webpack:///./src/shared/Content/rightSide/timerLogic.js?");

/***/ })

})