webpackHotUpdate("main",{

/***/ "./src/shared/Content/rightSide/Timer/timerLogic.js":
/*!**********************************************************!*\
  !*** ./src/shared/Content/rightSide/Timer/timerLogic.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useTimerLogic = void 0;\nvar react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar useNow_1 = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module './useNow'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nfunction useTimerLogic(_a) {\n    var initialMinutes = _a.initialMinutes, initialPauseMinutes = _a.initialPauseMinutes, buttonData = _a.buttonData;\n    var now = (0, useNow_1.useNow)();\n    var _b = (0, react_1.useState)(initialMinutes * 60), initialWorkTime = _b[0], setInitialWorkTime = _b[1];\n    var _c = (0, react_1.useState)(initialPauseMinutes * 60), initialPauseTime = _c[0], setInitialPauseTime = _c[1];\n    var _d = (0, react_1.useState)(initialWorkTime), seconds = _d[0], setSeconds = _d[1];\n    var _e = (0, react_1.useState)(false), isActive = _e[0], setIsActive = _e[1];\n    var _f = (0, react_1.useState)(false), isCompleted = _f[0], setIsCompleted = _f[1];\n    var _g = (0, react_1.useState)('work'), timerToggle = _g[0], setTimerToggle = _g[1];\n    var _h = (0, react_1.useState)(''), id = _h[0], setId = _h[1];\n    (0, react_1.useEffect)(function () {\n        setId(buttonData.id);\n    }, [buttonData]);\n    (0, react_1.useEffect)(function () {\n        setInitialWorkTime(initialMinutes * 60);\n        setSeconds(initialMinutes * 60);\n    }, [initialMinutes]);\n    (0, react_1.useEffect)(function () {\n        if (isActive) {\n            var timerId_1 = setTimeout(function () {\n                setSeconds(function (prevSeconds) { return prevSeconds - 1; });\n            }, 1000);\n            return function () { return clearTimeout(timerId_1); };\n        }\n    }, [isActive, seconds]);\n    (0, react_1.useEffect)(function () {\n        if (seconds === 0) {\n            setIsActive(false);\n            setIsCompleted(true);\n            setTimeout(function () {\n                setTimerToggle(function (prevToggle) { return (prevToggle === 'work' ? 'pause' : 'work'); });\n                setSeconds(function (prevToggle) { return (prevToggle === 'work' ? initialPauseTime : initialWorkTime); });\n                setIsCompleted(false);\n                setIsActive(true);\n            }, 3000);\n        }\n    }, [seconds, initialPauseTime, initialWorkTime]);\n    function plusMinutes() {\n        setInitialWorkTime(function (prevWorkTime) { return prevWorkTime + 60; });\n        setSeconds(function (prevSeconds) { return prevSeconds + 60; });\n    }\n    function handlePlusMinutesClick() {\n        plusMinutes();\n    }\n    var toggleTimer = function () {\n        setIsActive(function (prevIsActive) { return !prevIsActive; });\n    };\n    var resetTimer = function () {\n        setIsActive(false);\n        setIsCompleted(false);\n        setSeconds(initialWorkTime);\n    };\n    var formatTime = function (time) {\n        if (time < 0) {\n            return \"00:00\";\n        }\n        var minutes = Math.floor(time / 60);\n        var remainingSeconds = time % 60;\n        return \"\".concat(minutes, \":\").concat(remainingSeconds < 10 ? '0' : '').concat(remainingSeconds);\n    };\n    return {\n        seconds: seconds,\n        isActive: isActive,\n        isCompleted: isCompleted,\n        timerToggle: timerToggle,\n        id: id,\n        handlePlusMinutesClick: handlePlusMinutesClick,\n        toggleTimer: toggleTimer,\n        resetTimer: resetTimer,\n        formatTime: formatTime,\n    };\n}\nexports.useTimerLogic = useTimerLogic;\n\n\n//# sourceURL=webpack:///./src/shared/Content/rightSide/Timer/timerLogic.js?");

/***/ })

})